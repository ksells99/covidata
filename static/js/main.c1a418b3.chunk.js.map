{"version":3,"sources":["components/Footer.js","components/Navbar.js","components/DashCard.js","components/loader.gif","components/Loading.js","components/AllRegions.js","screens/Dashboard.js","screens/Region.js","screens/UKCases.js","screens/UKDeaths.js","App.js","index.js"],"names":["Footer","className","href","target","rel","Navbar","to","DashCard","type","color","newTitle","totalTitle","useState","recent","setRecent","combined","setCombined","lastUpdated","setLastUpdated","loading","setLoading","dataError","setDataError","fetchCases","a","axios","get","data","newCasesByPublishDate","cumCasesByPublishDate","date","console","error","fetchDeaths","newDeaths28DaysByPublishDate","cumDeaths28DaysByPublishDate","useEffect","numeral","format","dayjs","Loading","src","loader","alt","style","width","margin","display","AllRegions","setData","search","setSearch","fetchData","placeholder","value","onChange","e","onClick","filter","region","toLowerCase","includes","map","regionId","newCases","newDeaths","Dashboard","id","maxWidth","Region","match","caseChartData","setCaseChartData","deathChartData","setDeathChartData","tableData","setTableData","regionName","setRegionName","params","dates","cases","deaths","slice","reverse","forEach","day","push","labels","datasets","label","backgroundColor","class","options","scales","yAxes","ticks","beginAtZero","stepSize","UKCases","chartData","setChartData","UKDeaths","App","path","component","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1a418b3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className='mt-10 mb-5 text-center'>\r\n      <p className='text-sm font-semibold'>\r\n        Developed by{\" \"}\r\n        <a\r\n          href='https://www.kai-sells.co.uk'\r\n          target='_blank'\r\n          rel='noreferrer'\r\n          className='hover:text-charcoal font-bold'\r\n        >\r\n          Kai Sells\r\n        </a>\r\n        , with data fetched from the{\" \"}\r\n        <a\r\n          href='https://coronavirus.data.gov.uk/details/developers-guide'\r\n          target='_blank'\r\n          rel='noreferrer'\r\n          className='hover:text-charcoal font-bold'\r\n        >\r\n          GOV.UK Covid-19 API\r\n        </a>{\" \"}\r\n      </p>\r\n      <button className='mt-5 bg-charcoal text-gray-100 px-5 py-2 rounded text-sm font-semibold hover:bg-gray-600'>\r\n        <i className='fab fa-github mr-2'></i>\r\n        <a\r\n          href='https://github.com/ksells99/covidata'\r\n          target='_blank'\r\n          rel='noreferrer'\r\n        >\r\n          View GitHub Repo\r\n        </a>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Navbar = () => {\r\n  return (\r\n    <div className='bg-charcoal p-4 text-center font-source-sans text-gray-50'>\r\n      <Link to='/'>\r\n        <h3 className='text-3xl font-normal'>\r\n          <span className='font-semibold'>covid</span>ata{\" \"}\r\n          <i className='fas fa-viruses'></i>\r\n        </h3>\r\n      </Link>\r\n\r\n      <p className='text-sm font-light mt-1'>\r\n        stay at home {\">\"} protect the NHS {\">\"} save lives\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport dayjs from \"dayjs\";\r\nimport numeral from \"numeral\";\r\n\r\nconst DashCard = ({ type, color, newTitle, totalTitle }) => {\r\n  const [recent, setRecent] = useState(0);\r\n  const [combined, setCombined] = useState(0);\r\n  const [lastUpdated, setLastUpdated] = useState(\"01/01/1970\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataError, setDataError] = useState(null);\r\n\r\n  const fetchCases = async () => {\r\n    try {\r\n      setDataError(null);\r\n      // Get data from gov API\r\n      const {\r\n        data: { data },\r\n      } = await axios.get(\r\n        `https://api.coronavirus.data.gov.uk/v1/data?filters=areaType=overview&latestBy=date&structure={\"date\":\"date\", \"newCasesByPublishDate\":\"newCasesByPublishDate\",\"cumCasesByPublishDate\":\"cumCasesByPublishDate\"}`\r\n      );\r\n\r\n      // Get first object from array (latest date) and set state\r\n      setRecent(data[0].newCasesByPublishDate);\r\n      setCombined(data[0].cumCasesByPublishDate);\r\n      setLastUpdated(data[0].date);\r\n\r\n      setLoading(false);\r\n\r\n      //\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(error);\r\n      setDataError(\"Error fetching data. Reload to try again.\");\r\n    }\r\n  };\r\n\r\n  const fetchDeaths = async () => {\r\n    setDataError(null);\r\n    try {\r\n      // Get data from gov API\r\n      const {\r\n        data: { data },\r\n      } = await axios.get(\r\n        `https://api.coronavirus.data.gov.uk/v1/data?filters=areaType=overview&latestBy=date&structure={\"date\":\"date\",\"newDeaths28DaysByPublishDate\":\"newDeaths28DaysByPublishDate\",\"cumDeaths28DaysByPublishDate\":\"cumDeaths28DaysByPublishDate\" }`\r\n      );\r\n\r\n      // Get first object from array (latest date) and set state\r\n      setRecent(data[0].newDeaths28DaysByPublishDate);\r\n      setCombined(data[0].cumDeaths28DaysByPublishDate);\r\n      setLastUpdated(data[0].date);\r\n\r\n      setLoading(false);\r\n\r\n      //\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(error);\r\n      setDataError(\"Error fetching data. Reload to try again.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    if (type === \"cases\") {\r\n      fetchCases();\r\n    } else {\r\n      fetchDeaths();\r\n    }\r\n  }, [type]);\r\n\r\n  return (\r\n    <div\r\n      className={`w-full md:w-5/12   mb-5 md:mb-0 text-left font-semibold  rounded-md overflow-hidden bg-${color}`}\r\n    >\r\n      <Link to={`uk/${type}`}>\r\n        <div className='flex flex-col justify-between h-full p-5'>\r\n          <div>\r\n            <h3 className='text-md mb-1'>{newTitle}</h3>\r\n            <h2 className='text-2xl mb-3 font-bold'>\r\n              {loading ? (\r\n                \"-\"\r\n              ) : dataError ? (\r\n                <p className='text-sm font-light italic'>{dataError}</p>\r\n              ) : (\r\n                numeral(recent).format(\"0,0\")\r\n              )}\r\n            </h2>\r\n          </div>\r\n\r\n          <div>\r\n            <h3 className='text-md mb-1 text-right'>{totalTitle}</h3>\r\n            <h2 className='text-2xl text-right font-bold'>\r\n              {loading ? (\r\n                \"-\"\r\n              ) : dataError ? (\r\n                <p className='text-sm font-light italic'>{dataError}</p>\r\n              ) : (\r\n                numeral(combined).format(\"0,0\")\r\n              )}\r\n            </h2>\r\n          </div>\r\n          <p className='text-xs italic mt-3 '>{`Last updated ${dayjs(\r\n            lastUpdated\r\n          ).format(\"DD/MM/YYYY\")}`}</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashCard;\r\n","export default __webpack_public_path__ + \"static/media/loader.8981e9a5.gif\";","import React, { Fragment } from \"react\";\r\nimport loader from \"./loader.gif\";\r\n\r\nconst Loading = ({ type }) => {\r\n  return (\r\n    <Fragment>\r\n      <img\r\n        src={loader}\r\n        alt='Loading...'\r\n        style={{ width: \"100px\", margin: \"auto\", display: \"block\" }}\r\n      />\r\n      <p className='text-sm font-semibold text-center mt-3'>\r\n        {`Fetching ${type} data`}\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst AllRegions = () => {\r\n  const [data, setData] = useState([]);\r\n  const [dataError, setDataError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    setDataError(null);\r\n    try {\r\n      // Get data from gov API\r\n      const {\r\n        data: { data },\r\n      } = await axios.get(\r\n        `https://api.coronavirus.data.gov.uk/v1/data?filters=areaType=utla&latestBy=date&structure={\"date\":\"date\",\"newCases\":\"newCasesByPublishDate\",\"newDeaths\":\"newDeaths28DaysByPublishDate\",\"region\":\"areaName\",\"regionId\":\"areaCode\"}`\r\n      );\r\n\r\n      setLoading(false);\r\n      setData(data);\r\n\r\n      //\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(error);\r\n      setDataError(\"Error fetching data. Reload to try again.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return loading ? (\r\n    <Loading type='regional' />\r\n  ) : dataError ? (\r\n    <p className='text-md font-light italic'>{dataError}</p>\r\n  ) : (\r\n    <div>\r\n      <div className='mb-5'>\r\n        <span className='z-10  leading-snug font-normal  text-center text-gray-400 absolute bg-transparent rounded text-base items-center justify-center w-8 pl-3 py-3'>\r\n          <i className='fas fa-search'></i>\r\n        </span>\r\n\r\n        <div className='flex'>\r\n          <input\r\n            type='text'\r\n            placeholder='Search regions'\r\n            value={search || \"\"}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            className='px-3 py-3 placeholder-gray-400 text-gray-700 relative  bg-white rounded text-sm shadow outline-none focus:outline-none focus:shadow-outline w-full pl-10'\r\n          />\r\n          <button\r\n            className='bg-charcoal ml-1 w-10 rounded'\r\n            onClick={(e) => setSearch(\"\")}\r\n          >\r\n            <i className='fas fa-undo text-gray-50'></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className='grid grid-cols-1 md:grid-cols-2 md:gap-x-12 md:gap-y-4 mb-5'>\r\n        {/* Map through all regions and show new cases/deaths */}\r\n        {loading\r\n          ? null\r\n          : data\r\n              .filter((region) =>\r\n                region.region.toLowerCase().includes(search.toLowerCase())\r\n              )\r\n              .map((region) => (\r\n                <Link to={`region/${region.regionId}`} key={region.regionId}>\r\n                  <div\r\n                    className={`w-full  p-5 mb-5 md:mb-0 text-left font-semibold  rounded-md bg-pacific text-gray-50`}\r\n                  >\r\n                    <div className='flex flex-col'>\r\n                      <p className='text-md font-normal'>{region.region}</p>\r\n                      {/* API can return 'null' cases/deaths, so check for this and change to 0 if so */}\r\n                      <p className='text-xl'>{`${\r\n                        region.newCases == null ? \"0\" : region.newCases\r\n                      } new cases`}</p>\r\n                      <p className='text-xl'>{`${\r\n                        region.newDeaths == null ? \"0\" : region.newDeaths\r\n                      } new deaths`}</p>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllRegions;\r\n","import React from \"react\";\r\nimport DashCard from \"../components/DashCard\";\r\nimport AllRegions from \"../components/AllRegions\";\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div className='mx-auto font-source-sans bg-lavender2'>\r\n      <section id='uk-data' className='bg-lavender1'>\r\n        <div className='px-10 pb-10  mx-auto' style={{ maxWidth: \"1000px\" }}>\r\n          <h1 className='pt-5 mb-5 text-2xl'>United Kingdom summary</h1>\r\n\r\n          <div className='flex-none md:flex justify-between w-full'>\r\n            <DashCard\r\n              type='cases'\r\n              newTitle='New cases over 24 hour period'\r\n              totalTitle='Total cases'\r\n              color='honey'\r\n            />\r\n\r\n            <DashCard\r\n              type='deaths'\r\n              newTitle='New deaths within 28 days of a positive test'\r\n              totalTitle='Total deaths'\r\n              color='goldenrod'\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section id='regional-data' className='bg-lavender2'>\r\n        <div className='px-10  mx-auto' style={{ maxWidth: \"1000px\" }}>\r\n          <h1 className='pt-5 mb-5 text-2xl'>{`Regional data (past 24 hours)`}</h1>\r\n          <AllRegions />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport dayjs from \"dayjs\";\r\nimport numeral from \"numeral\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nconst Region = ({ match }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataError, setDataError] = useState(null);\r\n  const [caseChartData, setCaseChartData] = useState({});\r\n  const [deathChartData, setDeathChartData] = useState({});\r\n  const [tableData, setTableData] = useState([]);\r\n  const [regionName, setRegionName] = useState(\"\");\r\n\r\n  //   Get region ID from URL\r\n  const regionId = match.params.id;\r\n\r\n  //   Define chart scaling options\r\n  const caseChartOptions = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n            stepSize: 1000,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  const deathChartOptions = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n            stepSize: 50,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    setDataError(null);\r\n\r\n    try {\r\n      let dates = [];\r\n      let cases = [];\r\n      let deaths = [];\r\n\r\n      // Get data from gov API\r\n      const {\r\n        data: { data },\r\n      } = await axios.get(\r\n        `https://api.coronavirus.data.gov.uk/v1/data?filters=areaType=utla;areaCode=${regionId}&structure={\"date\":\"date\",\"newCasesByPublishDate\":\"newCasesByPublishDate\",\"newDeaths28DaysByPublishDate\":\"newDeaths28DaysByPublishDate\",\"region\":\"areaName\",\"regionId\":\"areaCode\"}`\r\n      );\r\n\r\n      if (data) {\r\n        setRegionName(data[0].region);\r\n\r\n        //   Get latest data for last 90 days for table\r\n        setTableData(data.slice(0, 90));\r\n\r\n        // Same for chart data but reverse (so latest date at end of chart)\r\n        const latestMonth = data.slice(0, 90).reverse();\r\n\r\n        //   Map through and add dates/cases to arrays defined above for use in chart\r\n        latestMonth.forEach((day) => {\r\n          dates.push(dayjs(day.date).format(\"DD/MM/YYYY\"));\r\n          cases.push(day.newCasesByPublishDate);\r\n          deaths.push(day.newDeaths28DaysByPublishDate);\r\n        });\r\n\r\n        // Then pass dates (labels) and cases (data) into state - then picked up by chart\r\n        setCaseChartData({\r\n          labels: dates,\r\n          datasets: [\r\n            {\r\n              label: \"New cases over 24 hour period\",\r\n              data: cases,\r\n              backgroundColor: \"#00A9C0\",\r\n            },\r\n          ],\r\n        });\r\n\r\n        setDeathChartData({\r\n          labels: dates,\r\n          datasets: [\r\n            {\r\n              label: \"New deaths within 28 days of a positive test\",\r\n              data: deaths,\r\n              backgroundColor: \"#D67B49\",\r\n            },\r\n          ],\r\n        });\r\n\r\n        setLoading(false);\r\n      } else {\r\n        setLoading(false);\r\n        setDataError(\"Error fetching data for region. Reload to try again.\");\r\n      }\r\n\r\n      //\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(error);\r\n      setDataError(\"Error fetching data for region. Reload to try again.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className='px-2 sm:px-10 text-center md:text-left mx-auto'\r\n      style={{ maxWidth: \"1000px\" }}\r\n    >\r\n      {/* NAV BUTTONS */}\r\n      <div className='flex  justify-between mt-3'>\r\n        <Link\r\n          to={\"/\"}\r\n          className=' bg-lavender1 font-semibold text-lg px-3 py-1 rounded'\r\n        >\r\n          <i class='fas fa-arrow-alt-circle-left'></i> Dashboard\r\n        </Link>\r\n      </div>\r\n\r\n      {/* PAGE HEADER */}\r\n      <h1 className='pt-5  text-xl sm:text-2xl'>\r\n        {`Regional data (past 90 days)`}{\" \"}\r\n      </h1>\r\n\r\n      {/* CONTENT */}\r\n      {loading ? (\r\n        <Loading type='regional' />\r\n      ) : dataError ? (\r\n        <p className='mt-5 text-md font-light italic'>{dataError}</p>\r\n      ) : (\r\n        <div>\r\n          <h1 className='pt-5 mb-5 text-xl sm:text-xl font-semibold italic'>\r\n            {`${regionName}`}{\" \"}\r\n          </h1>\r\n\r\n          <section id='cases' className='mb-10'>\r\n            <h2 className='text-lg underline '>Cases</h2>\r\n            <div className='chart'>\r\n              <Bar data={caseChartData} options={caseChartOptions}></Bar>\r\n            </div>\r\n\r\n            <p className='bg-lavender1 rounded p-3 text-center text-sm sm:text-base mt-5'>\r\n              Number of people with at least one positive COVID-19 test result\r\n              (either lab-reported or lateral flow device), by specimen date.\r\n              Individuals tested positive more than once are only counted once,\r\n              on the date of their first positive test.\r\n            </p>\r\n          </section>\r\n\r\n          <section id='deaths' className=' mb-10'>\r\n            <h2 className='text-lg underline mt-8 '>Deaths</h2>\r\n            <div className='chart'>\r\n              <Bar data={deathChartData} options={deathChartOptions}></Bar>\r\n            </div>\r\n\r\n            <p className='bg-lavender1 rounded p-3 text-center text-sm sm:text-base mt-5'>\r\n              Number of deaths of people who had had a positive test result for\r\n              COVID-19 and died within 28 days of the first positive test.\r\n            </p>\r\n          </section>\r\n\r\n          <section id='table'>\r\n            <div id='table-wrapper' className='mt-10 mb-5'>\r\n              <h2 className='text-lg underline mt-8 mb-4 '>Daily summary</h2>\r\n              <table class='table-fixed rounded w-full shadow-sm text-center md:text-left '>\r\n                <thead>\r\n                  <tr>\r\n                    <th className='bg-charcoal rounded-tl text-gray-50  px-8 py-3 w-1/2'>\r\n                      Date\r\n                    </th>\r\n                    <th className='bg-charcoal  text-gray-50  px-8 py-3 w-1/2'>\r\n                      Cases\r\n                    </th>\r\n                    <th className='bg-charcoal rounded-tr text-gray-50  px-8 py-3 w-1/2'>\r\n                      Deaths\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tableData.map((day) => (\r\n                    <tr\r\n                      className='even:bg-lavender1 odd:bg-lavender2 border-b border-lavender2'\r\n                      key={day.date}\r\n                    >\r\n                      <td className=' px-8 py-2'>\r\n                        {dayjs(day.date).format(\"DD/MM/YYYY\")}\r\n                      </td>\r\n                      <td className=' px-8 py-2'>\r\n                        {numeral(day.newCasesByPublishDate).format(\"0,0\")}\r\n                      </td>\r\n                      <td className=' px-8 py-2'>\r\n                        {numeral(day.newDeaths28DaysByPublishDate).format(\r\n                          \"0,0\"\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Region;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport dayjs from \"dayjs\";\r\nimport numeral from \"numeral\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nconst UKCases = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataError, setDataError] = useState(null);\r\n  const [chartData, setChartData] = useState({});\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const chartOptions = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n            stepSize: 20000,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    setDataError(null);\r\n\r\n    try {\r\n      let dates = [];\r\n      let cases = [];\r\n\r\n      // Get data from gov API\r\n      const {\r\n        data: { data },\r\n      } = await axios.get(\r\n        `https://api.coronavirus.data.gov.uk/v1/data?filters=areaType=overview&structure={\"date\":\"date\", \"newCasesByPublishDate\":\"newCasesByPublishDate\",\"cumCasesByPublishDate\":\"cumCasesByPublishDate\"}`\r\n      );\r\n\r\n      //   Get latest data for last 90 days for table\r\n      setTableData(data.slice(0, 90));\r\n\r\n      // Same for chart data but reverse (so latest date at end of chart)\r\n      const latestMonth = data.slice(0, 90).reverse();\r\n\r\n      //   Map through and add dates/cases to arrays defined above for use in chart\r\n      latestMonth.forEach((day) => {\r\n        dates.push(dayjs(day.date).format(\"DD/MM/YYYY\"));\r\n        cases.push(day.newCasesByPublishDate);\r\n      });\r\n\r\n      // Then pass dates (labels) and cases (data) into state - then picked up by chart\r\n      setChartData({\r\n        labels: dates,\r\n        datasets: [\r\n          {\r\n            label: \"New cases over 24 hour period\",\r\n            data: cases,\r\n            backgroundColor: \"#00A9C0\",\r\n          },\r\n        ],\r\n      });\r\n\r\n      setLoading(false);\r\n\r\n      //\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(error);\r\n      setDataError(\"Error fetching data. Reload to try again.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className='px-2 sm:px-10 text-center md:text-left mx-auto'\r\n      style={{ maxWidth: \"1000px\" }}\r\n    >\r\n      {/* NAV BUTTONS */}\r\n      <div className='flex  justify-between mt-3'>\r\n        <Link\r\n          to={\"/\"}\r\n          className=' bg-lavender1 font-semibold text-lg px-3 py-1 rounded'\r\n        >\r\n          <i class='fas fa-arrow-alt-circle-left'></i> Dashboard\r\n        </Link>\r\n        <Link\r\n          to={\"/uk/deaths\"}\r\n          className='  bg-goldenrod font-semibold text-lg px-3 py-1 rounded'\r\n        >\r\n          UK Deaths <i class='fas fa-arrow-alt-circle-right'></i>\r\n        </Link>\r\n      </div>\r\n\r\n      {/* PAGE HEADER */}\r\n      <h1 className='pt-5 mb-5 text-xl sm:text-2xl'>\r\n        {`UK cases (past 90 days)`}{\" \"}\r\n      </h1>\r\n\r\n      {/* CONTENT */}\r\n      {loading ? (\r\n        <Loading type='case' />\r\n      ) : dataError ? (\r\n        <p className='text-md font-light italic'>{dataError}</p>\r\n      ) : (\r\n        <div>\r\n          <div className='chart'>\r\n            <Bar data={chartData} options={chartOptions}></Bar>\r\n          </div>\r\n\r\n          <p className='bg-lavender1 rounded p-3 text-center text-sm sm:text-base mt-5'>\r\n            Number of people with at least one positive COVID-19 test result\r\n            (either lab-reported or lateral flow device), by specimen date.\r\n            Individuals tested positive more than once are only counted once, on\r\n            the date of their first positive test.\r\n          </p>\r\n\r\n          <div id='table-wrapper' className='my-5'>\r\n            <table class='table-fixed rounded w-full shadow-sm text-center md:text-left '>\r\n              <thead>\r\n                <tr>\r\n                  <th className='bg-charcoal rounded-tl text-gray-50  px-8 py-3 w-1/2'>\r\n                    Date\r\n                  </th>\r\n                  <th className='bg-charcoal rounded-tr text-gray-50  px-8 py-3 w-1/2'>\r\n                    Cases\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tableData.map((day) => (\r\n                  <tr className='even:bg-lavender1 odd:bg-lavender2 border-b border-lavender2'>\r\n                    <td className=' px-8 py-2'>\r\n                      {dayjs(day.date).format(\"DD/MM/YYYY\")}\r\n                    </td>\r\n                    <td className=' px-8 py-2'>\r\n                      {numeral(day.newCasesByPublishDate).format(\"0,0\")}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UKCases;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport dayjs from \"dayjs\";\r\nimport numeral from \"numeral\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nconst UKDeaths = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataError, setDataError] = useState(null);\r\n  const [chartData, setChartData] = useState({});\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const chartOptions = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n            stepSize: 500,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    setDataError(null);\r\n\r\n    try {\r\n      let dates = [];\r\n      let deaths = [];\r\n\r\n      // Get data from gov API\r\n      const {\r\n        data: { data },\r\n      } = await axios.get(\r\n        `https://api.coronavirus.data.gov.uk/v1/data?filters=areaType=overview&structure={\"date\":\"date\", \"newDeaths28DaysByPublishDate\":\"newDeaths28DaysByPublishDate\",\"cumDeaths28DaysByPublishDate\":\"cumDeaths28DaysByPublishDate\"}`\r\n      );\r\n\r\n      //   Get latest data for last 90 days for table\r\n      setTableData(data.slice(0, 90));\r\n\r\n      // Same for chart data but reverse (so latest date at end of chart)\r\n      const latestMonth = data.slice(0, 90).reverse();\r\n\r\n      //   Map through and add dates/deaths to arrays defined above for use in chart\r\n      latestMonth.forEach((day) => {\r\n        dates.push(dayjs(day.date).format(\"DD/MM/YYYY\"));\r\n        deaths.push(day.newDeaths28DaysByPublishDate);\r\n      });\r\n\r\n      // Then pass dates (labels) and deaths (data) into state - then picked up by chart\r\n      setChartData({\r\n        labels: dates,\r\n        datasets: [\r\n          {\r\n            label: \"New deaths within 28 days of a positive test\",\r\n            data: deaths,\r\n            backgroundColor: \"#D67B49\",\r\n          },\r\n        ],\r\n      });\r\n\r\n      setLoading(false);\r\n\r\n      //\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(error);\r\n      setDataError(\"Error fetching data. Reload to try again.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className='px-2 sm:px-10 text-center md:text-left mx-auto'\r\n      style={{ maxWidth: \"1000px\" }}\r\n    >\r\n      {/* NAV BUTTONS */}\r\n      <div className='flex  justify-between mt-3'>\r\n        <Link\r\n          to={\"/\"}\r\n          className=' bg-lavender1 font-semibold text-lg px-3 py-1 rounded'\r\n        >\r\n          <i class='fas fa-arrow-alt-circle-left'></i> Dashboard\r\n        </Link>\r\n        <Link\r\n          to={\"/uk/cases\"}\r\n          className='  bg-pacific font-semibold text-lg px-3 py-1 rounded text-gray-50'\r\n        >\r\n          UK Cases <i class='fas fa-arrow-alt-circle-right'></i>\r\n        </Link>\r\n      </div>\r\n\r\n      {/* PAGE HEADER */}\r\n      <h1 className='pt-5 mb-5 text-xl sm:text-2xl'>\r\n        {`UK deaths (past 90 days)`}{\" \"}\r\n      </h1>\r\n\r\n      {/* CONTENT */}\r\n      {loading ? (\r\n        <Loading type='death' />\r\n      ) : dataError ? (\r\n        <p className='text-md font-light italic'>{dataError}</p>\r\n      ) : (\r\n        <div>\r\n          <div className='chart'>\r\n            <Bar data={chartData} options={chartOptions}></Bar>\r\n          </div>\r\n\r\n          <p className='bg-lavender1 rounded p-3 text-center text-sm sm:text-base mt-5'>\r\n            Number of deaths of people who had had a positive test result for\r\n            COVID-19 and died within 28 days of the first positive test.\r\n          </p>\r\n\r\n          <div id='table-wrapper' className='my-5'>\r\n            <table class='table-fixed rounded w-full shadow-sm text-center md:text-left '>\r\n              <thead>\r\n                <tr>\r\n                  <th className='bg-charcoal rounded-tl text-gray-50  px-8 py-3 w-1/2'>\r\n                    Date\r\n                  </th>\r\n                  <th className='bg-charcoal rounded-tr text-gray-50  px-8 py-3 w-1/2'>\r\n                    Deaths\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tableData.map((day) => (\r\n                  <tr className='even:bg-lavender1 odd:bg-lavender2 border-b border-lavender2'>\r\n                    <td className=' px-8 py-2'>\r\n                      {dayjs(day.date).format(\"DD/MM/YYYY\")}\r\n                    </td>\r\n                    <td className=' px-8 py-2'>\r\n                      {numeral(day.newDeaths28DaysByPublishDate).format(\"0,0\")}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UKDeaths;\r\n","import { Switch, Route, Redirect } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\nimport Navbar from \"./components/Navbar\";\nimport Dashboard from \"./screens/Dashboard\";\nimport Region from \"./screens/Region\";\nimport UKCases from \"./screens/UKCases\";\nimport UKDeaths from \"./screens/UKDeaths\";\n\nfunction App() {\n  return (\n    <div className='font-source-sans'>\n      <Navbar />\n      <Switch>\n        <Route path='/' component={Dashboard} exact />\n        <Route path='/uk/cases' component={UKCases} exact />\n        <Route path='/uk/deaths' component={UKDeaths} exact />\n        <Route path='/region/:id' component={Region} />\n        <Route render={() => <Redirect to='/' />} />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./assets/main.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}